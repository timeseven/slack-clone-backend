"""initialization

Revision ID: 58ecdd60af51
Revises: 
Create Date: 2025-06-23 10:38:50.407227

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '58ecdd60af51'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=True),
    sa.Column('full_name', sa.String(length=255), nullable=False),
    sa.Column('avatar', sa.String(length=512), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_verified', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_superuser', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('users_pkey')),
    sa.UniqueConstraint('email', name=op.f('users_email_key'))
    )
    op.create_index(op.f('users_email_idx'), 'users', ['email', 'full_name'], unique=False)
    op.create_table('workspaces',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('slug', sa.String(length=255), nullable=False),
    sa.Column('logo', sa.String(length=512), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.PrimaryKeyConstraint('id', name=op.f('workspaces_pkey')),
    sa.UniqueConstraint('name', name=op.f('workspaces_name_key'))
    )
    op.create_table('channels',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=True),
    sa.Column('description', sa.String(length=255), nullable=True),
    sa.Column('type', postgresql.ENUM('channel', 'dm', 'group_dm', name='channel_type'), server_default=sa.text("'channel'"), nullable=False),
    sa.Column('is_private', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('last_message', sa.Text(), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('channels_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('channels_pkey'))
    )
    op.create_index(op.f('channels_workspace_id_idx'), 'channels', ['workspace_id'], unique=False)
    op.create_table('workspace_invitations',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('invitee_id', sa.String(length=36), nullable=False),
    sa.Column('inviter_id', sa.String(length=36), nullable=False),
    sa.Column('status', postgresql.ENUM('pending', 'accepted', 'declined', name='invitation_status'), server_default=sa.text("'pending'"), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['invitee_id'], ['users.id'], name=op.f('workspace_invitations_invitee_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['inviter_id'], ['users.id'], name=op.f('workspace_invitations_inviter_id_fkey')),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('workspace_invitations_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('workspace_invitations_pkey')),
    sa.UniqueConstraint('workspace_id', 'invitee_id', name=op.f('workspace_invitations_workspace_id_key'))
    )
    op.create_index(op.f('workspace_invitations_workspace_id_idx'), 'workspace_invitations', ['workspace_id', 'invitee_id'], unique=False)
    op.create_table('workspace_memberships',
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('role', postgresql.ENUM('owner', 'admin', 'member', name='workspace_member_role'), server_default=sa.text("'member'"), nullable=False),
    sa.Column('is_active', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('workspace_memberships_user_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('workspace_memberships_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('workspace_id', 'user_id', name=op.f('workspace_memberships_pkey'))
    )
    op.create_index(op.f('workspace_memberships_user_id_idx'), 'workspace_memberships', ['user_id'], unique=True, postgresql_where=sa.text('is_active = true'))
    op.create_index(op.f('workspace_memberships_workspace_id_idx'), 'workspace_memberships', ['workspace_id'], unique=True, postgresql_where=sa.text("role = 'owner'"))
    op.create_table('channel_memberships',
    sa.Column('channel_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=False),
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('role', postgresql.ENUM('owner', 'admin', 'member', name='channel_member_role'), server_default=sa.text("'member'"), nullable=False),
    sa.Column('is_starred', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('is_muted', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('last_read_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('unread_count', sa.Integer(), server_default=sa.text('0'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], name=op.f('channel_memberships_channel_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('channel_memberships_user_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('channel_memberships_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('channel_id', 'user_id', name=op.f('channel_memberships_pkey'))
    )
    op.create_index(op.f('channel_memberships_channel_id_idx'), 'channel_memberships', ['channel_id'], unique=True, postgresql_where=sa.text("role = 'owner'"))
    op.create_index(op.f('channel_memberships_workspace_id_idx'), 'channel_memberships', ['workspace_id'], unique=False)
    op.create_table('messages',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('channel_id', sa.String(length=36), nullable=False),
    sa.Column('parent_id', sa.String(length=36), nullable=True),
    sa.Column('content', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('message_type', postgresql.ENUM('message_user', 'message_system', 'changelog', 'notes', name='message_type'), server_default=sa.text("'message_user'"), nullable=False),
    sa.Column('is_pinned', sa.Boolean(), server_default=sa.text('false'), nullable=False),
    sa.Column('sender_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], name=op.f('messages_channel_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['messages.id'], name=op.f('messages_parent_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name=op.f('messages_sender_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('messages_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('messages_pkey'))
    )
    op.create_index(op.f('messages_channel_id_idx'), 'messages', ['channel_id'], unique=False)
    op.create_index(op.f('messages_workspace_id_idx'), 'messages', ['workspace_id'], unique=False)
    op.create_table('files',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('channel_id', sa.String(length=36), nullable=False),
    sa.Column('message_id', sa.String(length=36), nullable=True),
    sa.Column('filename', sa.String(length=255), nullable=False),
    sa.Column('filepath', sa.String(length=512), nullable=False),
    sa.Column('filetype', sa.String(length=255), nullable=False),
    sa.Column('size', sa.Integer(), nullable=False),
    sa.Column('uploader_id', sa.String(length=36), nullable=True),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['channel_id'], ['channels.id'], name=op.f('files_channel_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name=op.f('files_message_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['uploader_id'], ['users.id'], name=op.f('files_uploader_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('files_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('files_pkey'))
    )
    op.create_index(op.f('files_message_id_idx'), 'files', ['message_id'], unique=False)
    op.create_index(op.f('files_workspace_id_idx'), 'files', ['workspace_id', 'channel_id'], unique=False)
    op.create_table('message_mentions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('message_id', sa.String(length=36), nullable=False),
    sa.Column('user_id', sa.String(length=36), nullable=True),
    sa.Column('start_index', sa.Integer(), nullable=True),
    sa.Column('end_index', sa.Integer(), nullable=True),
    sa.Column('mention_text', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name=op.f('message_mentions_message_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('message_mentions_user_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('message_mentions_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('message_mentions_pkey'))
    )
    op.create_index(op.f('message_mentions_message_id_idx'), 'message_mentions', ['message_id'], unique=False)
    op.create_index(op.f('message_mentions_workspace_id_idx'), 'message_mentions', ['workspace_id'], unique=False)
    op.create_table('message_reactions',
    sa.Column('id', sa.String(length=36), nullable=False),
    sa.Column('workspace_id', sa.String(length=36), nullable=False),
    sa.Column('message_id', sa.String(length=36), nullable=False),
    sa.Column('emoji', sa.String(length=255), nullable=False),
    sa.Column('sender_id', sa.String(length=36), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['message_id'], ['messages.id'], name=op.f('message_reactions_message_id_fkey'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['sender_id'], ['users.id'], name=op.f('message_reactions_sender_id_fkey'), ondelete='SET NULL'),
    sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], name=op.f('message_reactions_workspace_id_fkey'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('message_reactions_pkey'))
    )
    op.create_index(op.f('message_reactions_message_id_idx'), 'message_reactions', ['message_id'], unique=False)
    op.create_index(op.f('message_reactions_workspace_id_idx'), 'message_reactions', ['workspace_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('message_reactions_workspace_id_idx'), table_name='message_reactions')
    op.drop_index(op.f('message_reactions_message_id_idx'), table_name='message_reactions')
    op.drop_table('message_reactions')
    op.drop_index(op.f('message_mentions_workspace_id_idx'), table_name='message_mentions')
    op.drop_index(op.f('message_mentions_message_id_idx'), table_name='message_mentions')
    op.drop_table('message_mentions')
    op.drop_index(op.f('files_workspace_id_idx'), table_name='files')
    op.drop_index(op.f('files_message_id_idx'), table_name='files')
    op.drop_table('files')
    op.drop_index(op.f('messages_workspace_id_idx'), table_name='messages')
    op.drop_index(op.f('messages_channel_id_idx'), table_name='messages')
    op.drop_table('messages')
    op.drop_index(op.f('channel_memberships_workspace_id_idx'), table_name='channel_memberships')
    op.drop_index(op.f('channel_memberships_channel_id_idx'), table_name='channel_memberships', postgresql_where=sa.text("role = 'owner'"))
    op.drop_table('channel_memberships')
    op.drop_index(op.f('workspace_memberships_workspace_id_idx'), table_name='workspace_memberships', postgresql_where=sa.text("role = 'owner'"))
    op.drop_index(op.f('workspace_memberships_user_id_idx'), table_name='workspace_memberships', postgresql_where=sa.text('is_active = true'))
    op.drop_table('workspace_memberships')
    op.drop_index(op.f('workspace_invitations_workspace_id_idx'), table_name='workspace_invitations')
    op.drop_table('workspace_invitations')
    op.drop_index(op.f('channels_workspace_id_idx'), table_name='channels')
    op.drop_table('channels')
    op.drop_table('workspaces')
    op.drop_index(op.f('users_email_idx'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###
